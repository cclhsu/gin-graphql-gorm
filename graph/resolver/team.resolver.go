package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"

	"github.com/cclhsu/gin-graphql-gorm/graph/model"
)

// CreateTeam is the resolver for the createTeam field.
func (r *mutationResolver) CreateTeam(ctx context.Context, teamDto model.TeamInput, token string) (*model.Team, error) {
	panic(fmt.Errorf("not implemented: CreateTeam - createTeam"))
}

// UpdateTeam is the resolver for the updateTeam field.
func (r *mutationResolver) UpdateTeam(ctx context.Context, uuid string, teamDto model.TeamInput, token string) (*model.Team, error) {
	panic(fmt.Errorf("not implemented: UpdateTeam - updateTeam"))
}

// DeleteTeam is the resolver for the deleteTeam field.
func (r *mutationResolver) DeleteTeam(ctx context.Context, uuid string, token string) (*model.Team, error) {
	panic(fmt.Errorf("not implemented: DeleteTeam - deleteTeam"))
}

// ListTeams is the resolver for the listTeams field.
func (r *queryResolver) ListTeams(ctx context.Context, token string) ([]*model.Team, error) {
	panic(fmt.Errorf("not implemented: ListTeams - listTeams"))
}

// GetTeam is the resolver for the getTeam field.
func (r *queryResolver) GetTeam(ctx context.Context, uuid string, token string) (*model.Team, error) {
	panic(fmt.Errorf("not implemented: GetTeam - getTeam"))
}

// GetTeamByID is the resolver for the getTeamByID field.
func (r *queryResolver) GetTeamByID(ctx context.Context, id string, token string) (*model.Team, error) {
	panic(fmt.Errorf("not implemented: GetTeamByID - getTeamByID"))
}

// GetTeamByName is the resolver for the getTeamByName field.
func (r *queryResolver) GetTeamByName(ctx context.Context, name string, token string) (*model.Team, error) {
	panic(fmt.Errorf("not implemented: GetTeamByName - getTeamByName"))
}

// GetTeamByEmail is the resolver for the getTeamByEmail field.
func (r *queryResolver) GetTeamByEmail(ctx context.Context, email string, token string) (*model.Team, error) {
	panic(fmt.Errorf("not implemented: GetTeamByEmail - getTeamByEmail"))
}
